{"version":3,"sources":["src/signs/rock.jpg","src/signs/paper.jpg","src/signs/scissors.jpg","src/PlayScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","rock","require","paper","scissors","bgColors","randomImage","emojis","Math","floor","random","length","PlayScreen","props","useState","counter","setCounter","useEffect","timer","setTimeout","prev","clearTimeout","View","style","StyleSheet","compose","backgroundColor","styles","container","Image","image","source","button","Button","title","onPress","Text","create","flex","alignItems","justifyContent","fontSize","color","width","height","position","bottom","App","play","setPlay","header","emoji","StatusBar","marginTop","marginBottom","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,qJCGrCC,EAAOC,EAAQ,KACfC,EAAQD,EAAQ,KAChBE,EAAWF,EAAQ,KAEnBG,EAAW,CAAC,UAAW,UAAW,WAElCC,EAAc,WAClB,IAAMC,EAAS,CAACN,EAAME,EAAOC,GAE7B,OAAOG,EADcC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOI,UAI1C,SAASC,EAAWC,GAAQ,IAAD,EACVC,mBAAS,GADC,WACjCC,EADiC,KACxBC,EADwB,KAexC,OAZAC,qBAAU,WAER,GAAgB,IAAZF,EAAJ,CAEA,IAAMG,EAAQC,YAAW,WACvBH,GAAW,SAACI,GAAD,OAAUA,EAAM,OAC1B,KACH,OAAO,WACLC,aAAaH,OAEd,CAACH,IAGF,kBAACO,EAAA,EAAD,CACEC,MAAOC,IAAWC,QAChB,CAAEC,gBAAiBrB,EAASU,EAAU,IACtCY,EAAOC,YAGRb,EAAU,EACT,oCACE,kBAACc,EAAA,EAAD,CAAON,MAAOI,EAAOG,MAAOC,OAAQzB,MACpC,kBAACgB,EAAA,EAAD,CAAMC,MAAOI,EAAOK,QAClB,kBAACC,EAAA,EAAD,CAAQC,MAAM,aAAaC,QAAS,kBAAMnB,EAAW,QAIzD,kBAACoB,EAAA,EAAD,CAAMb,MAAOI,EAAOZ,SAAUA,IAMtC,IAAMY,EAASH,IAAWa,OAAO,CAC/BT,UAAW,CACTU,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBzB,QAAS,CACP0B,SAAU,IACVC,MAAO,QAETZ,MAAO,CACLa,MAAO,IACPC,OAAQ,KAEVZ,OAAQ,CACNa,SAAU,WACVC,OAAQ,GACRH,MAAO,OC/DI,SAASI,IAAO,IAAD,EACJjC,oBAAS,GADL,WACrBkC,EADqB,KACfC,EADe,KAG5B,OAAOD,EACL,oCACA,kBAACpC,EAAD,OAGA,kBAACU,EAAA,EAAD,CAAMC,MAAOI,EAAOC,WAClB,kBAACQ,EAAA,EAAD,CAAMb,MAAOI,EAAOuB,QAApB,4BACA,kBAACd,EAAA,EAAD,CAAMb,MAAOI,EAAOwB,OAApB,0CACA,kBAAC7B,EAAA,EAAD,CAAMC,MAAOI,EAAOK,QAClB,kBAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAAS,kBAAMc,GAAQ,OAE9C,kBAACG,EAAA,UAAD,CAAW7B,MAAM,UAKvB,IAAMI,EAASH,IAAWa,OAAO,CAC/BT,UAAW,CACTU,KAAM,EACNZ,gBAAiB,UACjBa,WAAY,SACZC,eAAgB,UAElBU,OAAQ,CACNT,SAAU,GACVC,MAAO,QAETS,MAAO,CACLV,SAAU,GACVY,UAAW,GACXC,aAAc,IAEhBtB,OAAQ,CACNqB,UAAW,GACXV,MAAO,Q,4DCxCP,kBAAmBY,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.00aab15d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rock.0c057e73.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paper.c5ceb44e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scissors.49bc2100.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, Button, Image } from \"react-native\";\r\n\r\nconst rock = require(\"./signs/rock.jpg\");\r\nconst paper = require(\"./signs/paper.jpg\");\r\nconst scissors = require(\"./signs/scissors.jpg\");\r\n\r\nconst bgColors = [\"#34495e\", \"#e67e22\", \"#1abc9c\"];\r\n\r\nconst randomImage = () => {\r\n  const emojis = [rock, paper, scissors];\r\n  const randomNumber = Math.floor(Math.random() * emojis.length);\r\n  return emojis[randomNumber];\r\n};\r\n\r\nexport default function PlayScreen(props) {\r\n  const [counter, setCounter] = useState(3);\r\n\r\n  useEffect(() => {\r\n\r\n    if (counter === 0) return;\r\n\r\n    const timer = setTimeout(() => {\r\n      setCounter((prev) => prev- 1);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [counter]);\r\n\r\n  return (\r\n    <View\r\n      style={StyleSheet.compose(\r\n        { backgroundColor: bgColors[counter - 1] },\r\n        styles.container\r\n      )}\r\n    >\r\n      {counter < 1 ? (\r\n        <>\r\n          <Image style={styles.image} source={randomImage()} />\r\n          <View style={styles.button}>\r\n            <Button title=\"PLAY AGAIN\" onPress={() => setCounter(3)} />\r\n          </View>\r\n        </>\r\n      ) : (\r\n        <Text style={styles.counter}>{counter}</Text>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  counter: {\r\n    fontSize: 150,\r\n    color: \"#fff\",\r\n  },\r\n  image: {\r\n    width: 210,\r\n    height: 210,\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    bottom: 45,\r\n    width: 200,\r\n  },\r\n});\r\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\nimport PlayScreen from \"./src/PlayScreen\";\n\nexport default function App() {\n  const [play, setPlay] = useState(false);\n\n  return play ? (\n    <>\n    <PlayScreen />\n    </>\n  ) : (\n    <View style={styles.container}>\n      <Text style={styles.header}>Rock Paper Scissors Game</Text>\n      <Text style={styles.emoji}>üóø üìÑ ‚úÇÔ∏è</Text>\n      <View style={styles.button}>\n        <Button title=\"PLAY\" onPress={() => setPlay(true)} />\n      </View>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F44336\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  header: {\n    fontSize: 30,\n    color: '#fff'\n  },\n  emoji: {\n    fontSize: 45,\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  button: {\n    marginTop: 30,\n    width: 250,\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}